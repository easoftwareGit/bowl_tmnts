show me an example of a mock version of the Prisma client for a API GET request

Sure, here's an example of how you might mock the Prisma client for a GET 
request. This example is based on the information from the Ultimate Guide 
to Testing with Prisma: Mocking Prisma Client and the Prisma Docs.

First, you would create a mock version of the Prisma client. This mock 
client would have the same methods as the actual Prisma client, but these 
methods would return mock data instead of interacting with the database.

Here's an example of how you might create a mock Prisma client:

// Mock Prisma Client
const prisma = {
  bowl: {
    findMany: jest.fn().mockResolvedValue([
      {
        id: 1,
        bowl_name: 'Bowl 1',
        // include other fields here...
      },
      {
        id: 2,
        bowl_name: 'Bowl 2',
        // include other fields here...
      },
      // add more mock bowls here...
    ]),
  },
};

In this example, the findMany method is a Jest function that is mocked to 
return a Promise that resolves to an array of mock bowls. You can adjust 
the mock data to match the structure of the bowls in your actual database.

Then, in your test, you would call your GET function and check that it 
behaves as expected. Here's an example of how you might write a test for 
your GET function:

import { GET } from './your-file'; // replace 'your-file' with the path to your file

test('GET function returns expected data', async () => {
  const request = {}; // replace this with a mock request if needed
  const response = await GET(request);
  
  expect(response).toEqual({
    data: [
      {
        id: 1,
        bowl_name: 'Bowl 1',
        // include other fields here...
      },
      {
        id: 2,
        bowl_name: 'Bowl 2',
        // include other fields here...
      },
      // add more mock bowls here...
    ],
    status: 200,
  });
  
  expect(prisma.bowl.findMany).toHaveBeenCalled();
});

In this test, you're checking that the GET function returns the expected 
data and that it calls the findMany method on the Prisma client.

Please note that this is a simplified example and you might need to adjust 
it based on the specifics of your code and what exactly you want to test.